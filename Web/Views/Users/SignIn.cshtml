@using DataAccess
@using Core.Models
@using System.Text.Json


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Blog Post App - sign in</title>
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/@@mdi/font@6.x/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">
    <style>
        [v-cloak] {
            display: none
        }

        .border {
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div id="app" v-cloak>
            
        <k-layout :page-title="actualSite">
            <v-layout justify-center>
                <v-flex xs10 md5 class="mt-5">
                   <v-form class="border pa-5 white" href="signInForm">
                       <h2>Sign In</h2>
                        <v-text-field label="Login" prepend-icon="mdi-account" v-model="userLoginDto.Login"></v-text-field>
                        <v-text-field label="Password" :type="hidePassword ? 'password' : 'text'" prepend-icon="mdi-key"
                                      :append-icon="hidePassword ? 'mdi-eye-off' : 'mdi-eye'" v-model="userLoginDto.Password" 
                                      @@click:append="() => (hidePassword = !hidePassword)"></v-text-field>
                        <v-layout class="justify-space-between">
                            <v-btn :href="createUserPage" class="green darken-4 white--text text-capitalize">Create user</v-btn>

                            <v-dialog width="600px">
                                <template v-slot:activator="{ on, attrs }">
                                    <v-btn v-bind="attrs" v-on="on" class="green darken-4 white--text text-capitalize" width="125px" slot="activator" @@click="signIn">
                                        SignIn
                                    </v-btn>
                                </template>
                                <v-card v-if="popUpValue == 'validated'">
                                    <v-container text-center class="display-1 light-green darken-1 white--text">USER SIGNED IN</v-container>
                                </v-card>
                                <v-card v-if="popUpValue == 'not validated'">
                                    <v-container text-center class="display-1 red accent-2 white--text">USERNAME OR PASSWORD IS INCORRECT</v-container>
                                </v-card>
                            </v-dialog>
                        </v-layout>
                                      

                   </v-form>
                </v-flex>
            </v-layout>
        </k-layout>



    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.10/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/js/kNavTemplate.js"></script>
    <script>

 
        const app = new Vue({
            el: '#app',
            vuetify: new Vuetify(),
            data: {
                hidePassword: true,
                actualSite: "SignIn",
                userLoginDto: {
                    Login: "",
                    Password: ""
                },
                user: "",
                userEmail: "",
                popUpValue: ""
            },
            methods:{
                async signIn(){
                    try {
                        var response = await axios.post(`${window.location.origin}/Users/Login`, this.userLoginDto);
                        this.popUpValue = "validated";
                        setTimeout(function () {
                            window.location = `${window.location.origin}/Home/Index`;
                        }, 500);
                    } catch(error)
                    {
                        this.popUpValue = "not validated";
                    };
                },
            },
            computed: {
                createUserPage() {
                    return window.location.origin + "/Users/CreateUserPage"
                },


            },
        });
    </script>
</body>
</html>