@using DataAccess
@using Core.Models
@using System.Text.Json
@model IEnumerable<BlogPostModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>HTML 5 Boilerplate</title>
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/@@mdi/font@6.x/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">
    <style>
        [v-cloak] {
            display: none
        }
    </style>
</head>
<body>
    <div id="app" v-cloak>
        
        <k-layout :page-title="actualSite">
            <v-container fluid>
                <v-row>
                    <v-text-field v-model="text">

                    </v-text-field>
                </v-row>
                <v-row>
                    <v-btn @@click="helloWorld">
                        {{text}}
                    </v-btn>
                </v-row>
                <v-row class="pt-5">
                    <v-list v-if="blogModels" class="grey lighten-3">
                        <v-layout row wrap class="mx-2" justify-space-around>
                                <v-flex xs12 md6  class="pa-2 " v-for="(item, index) in blogModels" :key="index">
                                    <v-card height="200px" class="pa-1">
                                        <v-card-title>
                                            {{item.title}}
                                        </v-card-title>
                                        <v-row class>
                                            <v-card-text>
                                                {{item.content.substr(0,150)}}...
                                            </v-card-text>
                                        </v-row>
                                        
                                        <v-card-actions>
                                            <v-btn>
                                                Show detail
                                            </v-btn>
                                        </v-card-actions>
                                        
                                    </v-card>
                                </v-flex>
                            
                           
                        </v-layout>
                    </v-list>
                    <v-progress-circular v-else indeterminate>

                    </v-progress-circular>
                </v-row>
            </v-container>
        </k-layout>
    
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.10/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/js/kapp.js"></script>

    <script>

        

        const model = @Html.Raw(JsonSerializer.Serialize(Model, new JsonSerializerOptions(){
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase
        }))
        const app = new Vue({
            el: '#app',
            vuetify: new Vuetify(),
            data: {
                text: "Hello World",
                blogModels: model,
                drawler: false,
                actualSite: "Blog Posts",
                
            },
            methods:{
                helloWorld(){
                    console.log(this.text);
                    
                }
            },
            //async mounted() {
            //    const response = await axios.get("https://localhost:44355/DataTable/GetBlogModels");
            //    console.log(response.data);
            //    setTimeout(() => this.blogModels = response.data, 3000)
            //}
        });
    </script>
</body>
</html>