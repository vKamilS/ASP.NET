@using DataAccess
@using Core.Models
@using System.Text.Json
@model IEnumerable<BlogPostModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>HTML 5 Boilerplate</title>
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/@@mdi/font@6.x/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">
    <style>
        [v-cloak] {
            display: none
        }
    </style>
</head>
<body>
    <div id="app" v-cloak>
        <v-app>
            <v-navigation-drawer app>
                <!-- -->
            </v-navigation-drawer>

            <v-app-bar app>
                <!-- -->
            </v-app-bar>

            <!-- Sizes your content based upon application components -->
            <v-main>

                <!-- Provides the application the proper gutter -->
                <v-container fluid>
                    <v-row>
                        <v-text-field v-model="text">
                        
                        </v-text-field>
                    </v-row>
                    <v-row>
                        <v-btn @@click="helloWorld">
                            {{text}}
                        </v-btn>
                    </v-row>
                    <v-row>
                        <v-list v-if="blogModels">
                            <v-list-item class="ma-4" v-for="(item, index) in blogModels" :accesskey="index">
                                <v-card width="50%">
                                    <v-card-title>
                                        {{item.title}}
                                    </v-card-title>
                                    <v-card-text>
                                        {{item.content}}
                                    </v-card-text>
                                    <v-card-actions>
                                        <v-btn>
                                            Edit
                                        </v-btn>
                                    </v-card-actions>
                                </v-card>
                            </v-list-item>
                        </v-list>
                        <v-progress-circular v-else indeterminate>

                        </v-progress-circular>
                    </v-row>
                </v-container>
            </v-main>

            <v-footer app>
                <!-- -->
            </v-footer>
        </v-app>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.10/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        const model = @Html.Raw(JsonSerializer.Serialize(Model, new JsonSerializerOptions(){
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase
        }))
        const app = new Vue({
            el: '#app',
            vuetify: new Vuetify(),
            data: {
                text: "Hello World",
                blogModels: model
            },
            methods:{
                helloWorld(){
                    console.log(this.text);
                    
                }
            },
            //async mounted() {
            //    const response = await axios.get("https://localhost:44355/DataTable/GetBlogModels");
            //    console.log(response.data);
            //    setTimeout(() => this.blogModels = response.data, 3000)
            //}
        });
    </script>
</body>
</html>